{"version":3,"file":"static/js/259.a4844ed9.chunk.js","mappings":"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","sources":["projects/CarRacing/index.jsx","projects/FFTOcean/index.jsx","projects/FourierSketcher/index.jsx","projects/ODST/index.jsx","projects/RayTracer/index.jsx","projects/Shimenawa/index.jsx","projects/Webgl-Canny/index.jsx","projects/Website/index.jsx","projects/MLP Neural Network/index.jsx","projects/Disharmony/index.jsx","projects/Hex/index.jsx","projects/index.jsx","web/projects.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport SubRouter from \"../../web/routers/subrouter\";\r\n\r\nimport img from \"../../content/projects/CarRacing/thumb.png\";\r\nimport img_placeholder from \"../../content/projects/CarRacing/thumb_placeholder.png\";\r\n\r\nconst projTitle = \"Car Racing via Deep Q Learning\";\r\n\r\nconst Home = React.lazy(() => import(\"./home\"));\r\n\r\nconst routes = [\r\n    {path: \"/\", component: Home, exact: true},\r\n];\r\n\r\nconst Router = ({routerDepth}) => {\r\n    return (\r\n        <>\r\n        <Helmet><title>{projTitle}</title></Helmet>\r\n        <SubRouter routes={routes} routerDepth={routerDepth} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Meta = {\r\n    title: projTitle,\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    tags: [\"Python\", \"TensorFlow\"],\r\n    date: \"2023-01-09\",\r\n    abstract: \"Using reinforcement learning to race a physically-based car simulation.\",\r\n    legacy: false,\r\n    route: \"/CarRacing\",\r\n    router: Router\r\n}\r\n\r\nexport {Router, Meta};","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport SubRouter from \"../../web/routers/subrouter\";\r\n\r\nimport img from \"../../content/projects/FFTOcean/thumb.png\";\r\nimport img_placeholder from \"../../content/projects/FFTOcean/thumb_placeholder.png\"\r\n\r\nconst projTitle = \"FFT Ocean Generation\";\r\n\r\nconst Home = React.lazy(() => import(\"./home\"));\r\n\r\nconst routes = [\r\n    {path: \"/\", component: Home, exact: true},\r\n];\r\n\r\nconst Router = ({routerDepth}) => {\r\n    return (\r\n        <>\r\n        <Helmet><title>{projTitle}</title></Helmet>\r\n        <SubRouter routes={routes} routerDepth={routerDepth} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Router;\r\n\r\nconst Meta = {\r\n    title: projTitle,\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    tags: [\"GLSL\", \"ThreeJS\"],\r\n    date: \"2022-01-23\",\r\n    abstract: \"Fast ocean shaders on the web via vertex displacement.\",\r\n    legacy: false,\r\n    route: \"/FFTOcean\",\r\n    router: Router\r\n}\r\n\r\nexport {Router, Meta};","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport SubRouter from \"../../web/routers/subrouter\";\r\n\r\nimport img from \"../../content/projects/FourierSketcher/thumb.png\";\r\nimport img_placeholder from \"../../content/projects/FourierSketcher/thumb_placeholder.png\";\r\n\r\nconst projTitle = \"Fourier Sketcher (Prototype)\";\r\n\r\nconst Home = React.lazy(() => import(\"./home\"));\r\n// const Main = React.lazy(() => import(\"./src/main\"));\r\n\r\nconst routes = [\r\n    {path: \"/\", component: Home, exact: true},\r\n    // {path: \"/main\", component: Main, exact: true},\r\n];\r\n\r\nconst Router = ({routerDepth}) => {\r\n    return (\r\n        <>\r\n        <Helmet><title>{projTitle}</title></Helmet>\r\n        <SubRouter routes={routes} routerDepth={routerDepth} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Meta = {\r\n    title: projTitle,\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    date: \"2021-01-11\",\r\n    abstract: \"Drawing images with epicycles generated from FFT.\",\r\n    tags: [\"JavaScript\", \"~~p5js~~\"],\r\n    legacy: false,\r\n    route: \"/FourierSketcher\",\r\n    router: Router\r\n}\r\n\r\nexport {Router, Meta};","import img from \"../../content/projects/ODST/thumb.png\";\r\nimport img_placeholder from \"../../content/projects/ODST/thumb_placeholder.png\";\r\nimport teaser from \"../../content/projects/ODST/Arcimboldo_Transfer.png\";\r\n\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport SubRouter from \"../../web/routers/subrouter\";\r\n\r\nconst projTitle = \"Objects as Semantics in Style Transfer\";\r\n\r\nconst Home = React.lazy(() => import(\"./home\"));\r\n\r\nconst routes = [\r\n    {path: \"/\", component: Home, exact: true},\r\n];\r\n\r\nconst Router = ({routerDepth}) => {\r\n    return (\r\n        <>\r\n        <Helmet><title>{projTitle}</title></Helmet>\r\n        <SubRouter routes={routes} routerDepth={routerDepth} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Meta = {\r\n    title: projTitle,\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    teaser: teaser,\r\n    tags: [\"Python\", \"TensorFlow\"],\r\n    date: \"2023-05-05\",\r\n    abstract: \"Using object segmentation to preserve semantic composition during style transfer.\",\r\n    legacy: false,\r\n    route: \"/ODST\",\r\n    router: Router\r\n}\r\n\r\nexport {Router, Meta};","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport SubRouter from \"../../web/routers/subrouter\";\r\n\r\nimport img from \"../../content/projects/RayTracer/thumb.png\";\r\nimport img_placeholder from \"../../content/projects/RayTracer/thumb_placeholder.png\";\r\n\r\nconst projTitle = \"C++ RayTracer\";\r\n\r\nconst Home = React.lazy(() => import(\"./home\"));\r\n\r\nconst routes = [\r\n    {path: \"/\", component: Home, exact: true},\r\n];\r\n\r\nconst Router = ({routerDepth}) => {\r\n    return (\r\n        <>\r\n        <Helmet><title>{projTitle}</title></Helmet>\r\n        <SubRouter routes={routes} routerDepth={routerDepth} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Meta = {\r\n    title: projTitle,\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    tags: [\"C++\", \"~~ray-tracing~~\"],\r\n    date: \"2022-12-08\",\r\n    abstract: \"A photon-mapping based raytracer written in C++ from first principles.\",\r\n    legacy: false,\r\n    route: \"/RayTracer\",\r\n    router: Router\r\n}\r\n\r\nexport {Router, Meta};","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport SubRouter from \"../../web/routers/subrouter\";\r\n\r\nimport img from \"../../content/projects/Shimenawa/day_thumb.png\";\r\nimport img_placeholder from \"../../content/projects/Shimenawa/day_thumb_placeholder.png\";\r\nimport teaser from \"../../content/projects/Shimenawa/day_thumb.png\";\r\n\r\nconst projTitle = \"Shimenawa\";\r\n\r\nconst Home = React.lazy(() => import(\"./home\"));\r\n\r\nconst routes = [\r\n    {path: \"/\", component: Home, exact: true},\r\n];\r\n\r\nconst Router = ({routerDepth}) => {\r\n    return (\r\n        <>\r\n        <Helmet><title>{projTitle}</title></Helmet>\r\n        <SubRouter routes={routes} routerDepth={routerDepth} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Meta = {\r\n    title:  projTitle,\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    teaser: teaser,\r\n    tags: [\"GLSL\", \"~~ray-marching~~\"],\r\n    date: \"2024-01-13\",\r\n    abstract: \"Ray marching complex scenes with implicit geometry and physically based volumetrics.\",\r\n    legacy: false,\r\n    route: \"/Shimenawa\",\r\n    router: Router\r\n}\r\n\r\nexport {Router, Meta};","import img from \"../../content/projects/Webgl-Canny/Canny-thumbnail.png\";\r\nimport img_placeholder from \"../../content/projects/Webgl-Canny/Canny-thumbnail_placeholder.png\";\r\n\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport SubRouter from \"../../web/routers/subrouter\";\r\n\r\nconst projTitle = \"WebGL Canny Edge Detection\";\r\n\r\nconst Home = React.lazy(() => import(\"./home\"));\r\nconst Main = React.lazy(() => import(\"./src/main\"));\r\n\r\nconst routes = [\r\n    {path: \"/\", component: Home, exact: true},\r\n    {path: \"/main\", component: Main, exact: true},\r\n];\r\n\r\nconst Router = ({routerDepth}) => {\r\n    return (\r\n        <>\r\n        <Helmet><title>{projTitle}</title></Helmet>\r\n        <SubRouter routes={routes} routerDepth={routerDepth} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Meta = {\r\n    title: projTitle,\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    date: \"2021-06-03\",\r\n    abstract: \"GPU-accelerated edge detection on the web.\",\r\n    tags: [\"GLSL\", \"ThreeJS\", \"ReactJS\", \"~~antd~~\"],\r\n    legacy: false,\r\n    route: \"/Webgl-Canny\",\r\n    router: Router\r\n}\r\n\r\nexport {Router, Meta};","import img from \"../../content/projects/Website/thumb.png\"\r\nimport img_placeholder from \"../../content/projects/Website/thumb_placeholder.png\";\r\n\r\nconst Meta = {\r\n    title: \"This Website!\",\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    tags: [\"ReactJS\", \"~~antd~~\"],\r\n    abstract: \"This page is part of this project!\",\r\n    date: \"2021 -> Present\",\r\n    legacy: false,\r\n    route: null,\r\n    tooltip: \"Take a look around!\"\r\n}\r\n\r\nexport {Meta};","import img from \"../../content/projects/MLPNN/thumb.png\";\r\nimport img_placeholder from \"../../content/projects/MLPNN/thumb_placeholder.png\";\r\n\r\nconst Meta = {\r\n    title: \"MLP Neural Network\",\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    tags: [\"Python\"],\r\n    legacy: true,\r\n    abstract: \"An MLP neural network built in python from first principles.\",\r\n    date: \"2022\",\r\n    route: \"https://github.com/Skittss/MLPNeuralNet\",\r\n}\r\n\r\nexport {Meta};","import img from \"../../content/projects/Disharmony/thumb.png\";\r\nimport img_placeholder from \"../../content/projects/Disharmony/thumb_placeholder.png\";\r\n\r\nconst Meta = {\r\n    title: \"Disharmony\",\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    tags: [\"ReactJS\", \"NodeJS\", \"~~Spotify API~~\"],\r\n    legacy: true,\r\n    abstract: \"A web-based multiplayer rhythm game developed in 24 hours for Bath Hack 2021\",\r\n    date: \"2021\",\r\n    route: \"https://devpost.com/software/disharmony\",\r\n}\r\n\r\nexport {Meta};","import img from \"../../content/projects/Hex/thumb.png\";\r\nimport img_placeholder from \"../../content/projects/Hex/thumb_placeholder.png\";\r\n\r\nconst Meta = {\r\n    title: \"Hex\",\r\n    thumb: img,\r\n    placeholder: img_placeholder,\r\n    tags: [\"C#\"],\r\n    legacy: true,\r\n    abstract: \"An autochess game & basic game engine built from the ground up.\",\r\n    date: \"2020\",\r\n    route: \"https://github.com/Skittss/Hex\",\r\n}\r\n\r\nexport {Meta};","import {Meta as Website} from \"./Website\";\r\nimport {Meta as WebglCanny} from \"./Webgl-Canny\";\r\nimport {Meta as MLPNN} from \"./MLP Neural Network\";\r\nimport {Meta as FourierSketcher} from \"./FourierSketcher\";\r\nimport {Meta as Disharmony} from \"./Disharmony\";\r\nimport {Meta as Hex} from \"./Hex\";\r\nimport {Meta as FFTOcean} from \"./FFTOcean\";\r\nimport {Meta as CarRacing} from \"./CarRacing\";\r\nimport {Meta as RayTracer} from \"./RayTracer\";\r\nimport {Meta as ODST} from \"./ODST\";\r\nimport {Meta as Shimenawa} from \"./Shimenawa\";\r\n\r\n// Newest at the front for now\r\nconst ProjectMetas = [\r\n    Shimenawa,\r\n    ODST,\r\n    CarRacing,\r\n    RayTracer,\r\n    FFTOcean,\r\n    WebglCanny,\r\n    FourierSketcher,\r\n    MLPNN,\r\n    Disharmony,\r\n    Website,\r\n    Hex\r\n];\r\n\r\nexport default ProjectMetas;","import React, { useEffect, useState } from 'react';\r\nimport FadeIn from 'react-fade-in';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Card, Tooltip, Grid, Row, Col, Divider } from 'antd';\r\nimport ProjectMetas from \"../projects\";\r\n\r\nimport \"../css/projectpage.scss\";\r\n\r\nconst { useBreakpoint } = Grid\r\n\r\nconst { Meta } = Card;\r\n\r\nconst _langTagColours = {\r\n    \"JavaScript\": \"#43FF97\",\r\n    \"ReactJS\": \"#EE177C\",\r\n    \"NodeJS\": \"#F15156\",\r\n    \"C++\": \"#b83dff\",\r\n    \"C#\": \"#04724D\",\r\n    \"GLSL\": \"#00CECB\",\r\n    \"ThreeJS\": \"#AEF78E\",\r\n    \"Python\": \"#F5BB00\",\r\n    \"TensorFlow\": \"#F95738\"\r\n}\r\n\r\nconst _getLangTagStyle = props => {\r\n    var regex = new RegExp(\"^~~(.*)~~$\");\r\n    var brdr;\r\n    var txt;\r\n    var op;\r\n    if (regex.test(props.text)) {\r\n        brdr = \"dashed\";\r\n        txt = props.text.slice(2, -2);\r\n        op = 0.5;\r\n    } else {\r\n        brdr = \"solid\";\r\n        txt = props.text;\r\n        op = 1;\r\n    }\r\n\r\n    return {\r\n        color: _langTagColours[txt] === undefined ? \"whitesmoke\" : _langTagColours[txt],\r\n        border: brdr,\r\n        text: txt,\r\n        opacity: op\r\n    }\r\n}\r\n\r\nconst LangTags = props => {\r\n    return (\r\n        props.tags.map(tag => <span><LangTag text={tag}/>&nbsp;</span>)\r\n    );\r\n}\r\n\r\nconst LangTag = props => {   \r\n    let s = _getLangTagStyle(props);\r\n    \r\n    return (\r\n        <span class=\"LangTag\" style={{color: s.color, borderColor: s.color, borderStyle: s.border, opacity: s.opacity}}>{s.text}</span>\r\n    );\r\n}\r\n\r\nconst _getCard = (pMeta, thumb, large, screens) => {\r\n    if (screens.sm) return _getProjectCard(pMeta, thumb, large);\r\n    return _getProjectCardVertical(pMeta, thumb, large)\r\n}\r\n\r\nconst _getProjectCardVertical = (pMeta, thumb, large) => {\r\n\r\n    return (\r\n        <Col span={24} style={{\r\n            padding: 0,\r\n            boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n        }}>\r\n            <Row>\r\n                <div style={{\r\n                    aspectRatio: \"1 / 1\",\r\n                    backgroundImage: `url(${thumb || pMeta.placeholder})`,\r\n                    backgroundPosition: 'center',\r\n                    backgroundSize: 'cover',\r\n                    backgroundRepeat: 'no-repeat',\r\n                    width: \"100%\",\r\n                }}/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    aspectRatio: \"1 / 1\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    background: \"linear-gradient(180deg, rgba(21,25,31,0) 0%, rgba(21,25,31,1) 100%)\"\r\n                }} />\r\n            </Row>\r\n            <Row>\r\n                <div className=\"project-content-wrapper\" style={{\r\n                    marginLeft: \"20px\", marginRight: \"10px\", width: \"100%\",\r\n                    paddingTop: \"10px\", textAlign: \"center\"\r\n                }}>\r\n                    <h1 style={{marginBottom: \"5px\", fontSize: large ? \"calc(2.4em + 0.2vw)\" : \"calc(1.4em + 0.2vw)\"}}>{pMeta.title}</h1>\r\n                    {pMeta.date ? (\r\n                        <p className=\"hint-text\" style={{marginBottom: \"15px\"}}>{pMeta.date}</p>\r\n                    ) : null}\r\n                    <LangTags tags={pMeta.tags}/>\r\n                    <p style={{marginTop: \"10px\"}}>\r\n                        {pMeta.abstract ? pMeta.abstract : \"\"}\r\n                    </p>\r\n\r\n                </div>\r\n            </Row>\r\n        </Col>\r\n    )\r\n\r\n}\r\n\r\nconst _getProjectCard = (pMeta, thumb, large, screens) => {\r\n\r\n    return (\r\n        <Row style={{\r\n            boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n        }}>\r\n        <Col span={8} style={{position: \"relative\"}}>\r\n            <div style={{\r\n                aspectRatio: \"1 / 1\",\r\n                backgroundImage: `url(${thumb || pMeta.placeholder})`,\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n                width: \"100%\"\r\n            }}/>\r\n            <div style={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                background: \"linear-gradient(90deg, rgba(21,25,31,0) 0%, rgba(21,25,31,1) 100%)\"\r\n            }} />\r\n        </Col>\r\n        <Col span={16} style={{contain: \"size\"}}>\r\n            <div className=\"project-content-wrapper\" style={{\r\n                marginLeft: \"20px\", marginRight: \"10px\",\r\n                paddingTop: \"10px\",\r\n            }}>\r\n                <h1 style={{marginBottom: \"5px\", fontSize: large ? \"calc(2.4em + 0.2vw)\" : \"calc(1.4em + 0.2vw)\"}}>{pMeta.title}</h1>\r\n                {pMeta.date ? (\r\n                    <p className=\"hint-text\" style={{marginBottom: \"15px\"}}>{pMeta.date}</p>\r\n                ) : null}\r\n                <LangTags tags={pMeta.tags}/>\r\n                <p style={{marginTop: \"10px\"}}>\r\n                    {pMeta.abstract ? pMeta.abstract : \"\"}\r\n                </p>\r\n\r\n            </div>\r\n        </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nconst Projects = () => {\r\n\r\n    const screens = useBreakpoint();\r\n    const loc = useLocation();\r\n\r\n    const primaryColSpan = screens.xl ? 12 : 24;\r\n    const primaryColProjIdxStart = screens.xl ? 1 : 0;\r\n    const primaryColGutter = screens.sm ? [16, 16] : [0, 16];\r\n    \r\n    const [sources, setSource] = useState(ProjectMetas.map(meta => null));\r\n\r\n    useEffect(() => {\r\n        ProjectMetas.map((meta, idx) => {\r\n            const src_img = new Image();\r\n            src_img.src = meta.thumb;\r\n            src_img.onload = () => {\r\n                setSource(sources => {\r\n                    let newSources = sources.map((src, src_idx) => {\r\n                        if (src_idx == idx) return meta.thumb;\r\n                        return src;\r\n                    })\r\n                    return newSources;\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={screens.xl ? 'padded-main' : 'unpadded-main'}>\r\n        <div className=\"project-view\">\r\n            <FadeIn>\r\n\r\n                {screens.xl ? (\r\n                    <Row style={{paddingBottom: 16}} justify=\"center\">\r\n                        <Col span={16}>\r\n                            <Link to={loc.pathname + ProjectMetas[0].route}>\r\n                                {_getCard(ProjectMetas[0], sources[0], true, screens)}                                \r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                ) : null}\r\n\r\n                <Row gutter={primaryColGutter} justify=\"center\" align=\"middle\">\r\n                    {\r\n                        ProjectMetas.slice(primaryColProjIdxStart).map((pMeta, idx) => {\r\n                            if (pMeta.legacy) {\r\n                                return null\r\n                            }\r\n                            if (pMeta.route === null) {\r\n                                return (\r\n                                    <Col span={primaryColSpan}>\r\n                                        <Tooltip title={pMeta.tooltip ? pMeta.tooltip : \"This project has no page yet.\"} placement=\"bottom\">\r\n                                            {_getCard(pMeta, sources[primaryColProjIdxStart + idx], false, screens)}\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                    <Col span={primaryColSpan}>   \r\n                                        <Link to={loc.pathname + pMeta.route}>\r\n                                            {_getCard(pMeta, sources[primaryColProjIdxStart + idx], false, screens)}                                \r\n                                        </Link>\r\n                                    </Col>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </Row>\r\n                <Divider style={{borderTopWidth: \"1px\", borderTopColor: \"#000000\", opacity: 0.5, marginBottom: 0, marginTop: \"10vh\"}}/>\r\n                <div className=\"project-content-wrapper\" style={{paddingTop: 0}}>\r\n                    <h1 align=\"middle\" style={{fontSize: \"2.5em\", padding: \"30px 0\", marginBottom: \"5vh\"}}>\r\n                        MISC. PROJECTS (LINK ONLY)\r\n                    </h1>\r\n                </div>\r\n                <Row gutter={primaryColGutter} justify=\"center\" align=\"middle\">\r\n                    {\r\n                        ProjectMetas.map((pMeta, idx) => {\r\n                            if (!pMeta.legacy) {\r\n                                return null\r\n                            }\r\n                            if (pMeta.route === null) {\r\n                                return (\r\n                                    <Col span={primaryColSpan}>\r\n                                        <Tooltip title={pMeta.tooltip ? pMeta.tooltip : \"This project has no link yet.\"} placement=\"bottom\">\r\n                                            {_getCard(pMeta, sources[idx], false, screens)}\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                    <Col span={primaryColSpan}>\r\n                                        {pMeta.tooltip ? (\r\n                                            <Tooltip title={pMeta.tooltip} placement=\"bottom\">\r\n                                                <a href={pMeta.route}>\r\n                                                    {_getCard(pMeta, sources[idx], false, screens)}                                \r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        ) : (\r\n                                            <a href={pMeta.route}>\r\n                                                {_getCard(pMeta, sources[idx], false, screens)}                                \r\n                                            </a>\r\n                                        )}\r\n                                    </Col>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </Row>\r\n            </FadeIn>\r\n        </div>\r\n        <div className=\"project-footer-wrapper\" style={{\r\n            display: \"flex\", justifyContent: \"center\", \r\n            marginTop: \"4vh\", marginBottom: \"3vh\",\r\n        }}>\r\n            ❋ That's all for now! ❋\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;"],"names":["projTitle","routes","path","component","React","exact","Router","_ref","routerDepth","_jsxs","_Fragment","children","_jsx","Helmet","SubRouter","Meta","title","thumb","img","placeholder","tags","date","abstract","legacy","route","router","img_placeholder","teaser","tooltip","Shimenawa","ODST","CarRacing","RayTracer","FFTOcean","WebglCanny","FourierSketcher","MLPNN","Disharmony","Website","Hex","useBreakpoint","Grid","Card","_langTagColours","LangTags","props","map","tag","LangTag","text","s","brdr","txt","op","RegExp","test","slice","color","undefined","border","opacity","_getLangTagStyle","class","style","borderColor","borderStyle","_getCard","pMeta","large","screens","sm","_getProjectCard","_getProjectCardVertical","Col","span","padding","boxShadow","Row","aspectRatio","backgroundImage","concat","backgroundPosition","backgroundSize","backgroundRepeat","width","position","top","left","background","className","marginLeft","marginRight","paddingTop","textAlign","marginBottom","fontSize","marginTop","height","contain","Projects","loc","useLocation","primaryColSpan","xl","primaryColProjIdxStart","primaryColGutter","sources","setSource","useState","ProjectMetas","meta","useEffect","idx","src_img","Image","src","onload","src_idx","FadeIn","paddingBottom","justify","Link","to","pathname","gutter","align","Tooltip","placement","Divider","borderTopWidth","borderTopColor","href","display","justifyContent"],"sourceRoot":""}