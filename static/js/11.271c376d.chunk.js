(this.webpackJsonpapp=this.webpackJsonpapp||[]).push([[11],{104:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return a(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var i=o(t(0));n.default=function(e){var n=i.useState(0),t=n[0],r=n[1],a=e.transitionDuration||400,o=e.delay||50,c=e.wrapperTag||"div",s=e.childTag||"div",u="undefined"===typeof e.visible||e.visible;return i.useEffect((function(){var n=i.default.Children.count(e.children);if(u||(n=0),n==t){var c=setTimeout((function(){e.onComplete&&e.onComplete()}),a);return function(){return clearTimeout(c)}}var s=n>t?1:-1,l=setTimeout((function(){r(t+s)}),o);return function(){return clearTimeout(l)}}),[i.default.Children.count(e.children),o,t,u,a]),i.default.createElement(c,{className:e.className},i.default.Children.map(e.children,(function(n,r){return i.default.createElement(s,{className:e.childClassName,style:{transition:"opacity "+a+"ms, transform "+a+"ms",transform:t>r?"none":"translateY(20px)",opacity:t>r?1:0}},n)})))}},184:function(e,n,t){},222:function(e,n,t){"use strict";t.r(n);var r=t(91),a=t(0),o=t(206),i=t(77),c=t(181);function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var u=function(e){return function(n){e.forEach((function(e){"function"===typeof e?e(n):null!=e&&(e.current=n)}))}},l=a.forwardRef((function(e,n){var t=e.makeDefault,r=e.manual,i=Object(c.a)(e,["makeDefault","manual"]),l=Object(o.e)((function(e){return e.set})),f=Object(o.e)((function(e){return e.camera})),m=Object(o.e)((function(e){return e.size})),v=a.useRef();return a.useLayoutEffect((function(){var e=v.current;e&&!r&&(e.aspect=m.width/m.height,e.updateProjectionMatrix())}),[m,i]),a.useLayoutEffect((function(){if(t&&v.current){var e=f;return l((function(){return{camera:v.current}})),function(){return l((function(){return{camera:e}}))}}}),[f,v,t,l]),a.createElement("perspectiveCamera",s({ref:u([v,n])},i))})),f=t(171),m=t(154),v=t(158),d=t(78),p=t(82),h=t(83),x=t(84),b=t(86),j={uniforms:{tDiffuse:{value:null},cameraNear:{value:0},cameraFar:{value:0}},vertexShader:"\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",fragmentShader:"\n\n        #include <packing>\n\n        varying vec2 vUv;\n        uniform sampler2D tDiffuse;\n        uniform float cameraNear;\n        uniform float cameraFar;\n\n        \n        float readDepth( sampler2D depthSampler, vec2 coord ) {\n            float fragCoordZ = texture2D( depthSampler, coord ).x;\n            float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\n            return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\n        }\n\n        void main() {\n\n            float depth = readDepth(tDiffuse, vUv);\n\n            gl_FragColor.rgb = 1.0 - vec3( depth );\n            gl_FragColor.a = 1.0;\n\n        }"},g=(b.b,t(93),t(184),t(4));Object(o.b)({EffectComposer:f.a,ShaderPass:m.a,RenderPass:v.a});var y=function(e){var n=e.noisePos,t=e.clock,r=e.callback,c=Object(a.useMemo)((function(){return{noisePos:{value:0},bumpScale:{value:100},zoom:{value:4},opacity:{value:0}}}),[]);return Object(o.c)((function(e){var a=t.getDelta();c.noisePos.value=n+.5*a,c.opacity.value=Math.min(1,n/1.5),r((function(e){return e+.5*a}))})),Object(g.jsxs)("mesh",{position:[0,0,0],rotation:[-Math.PI/2,0,0],scale:[1/256,1/256,1/256],children:[Object(g.jsx)("planeBufferGeometry",{attach:"geometry",args:[1024,1024,1024,1024]}),Object(g.jsx)("shaderMaterial",{attach:"material",uniforms:c,vertexShader:'\nuniform float noisePos;\nuniform float bumpScale;\nuniform float zoom;\n\n// A variable to store the height of the point\nvarying float vAmount;\n// The UV mapping coordinates of a vertex\nvarying vec2 vUV;\n\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nvoid main()\n{\n    // The "coordinates" in UV mapping representation\n    vUV = uv;\n\n    // The heightmap data at those coordinates\n    vec2 pos = (zoom * uv + vec2(noisePos, 0));\n    float bumpData = (snoise(pos) + 0.5 * snoise(2.0 * pos) + 0.25 * snoise(4.0 * pos) + 0.125 * snoise(8.0 * pos));\n\n    // height map is grayscale, so it doesn\'t matter if you use r, g, or b.\n    vAmount = bumpData;\n\n    // move the position along the normal\n    vec3 newPosition = position + normal * bumpScale * vAmount;\n\n    // Compute the position of the vertex using a standard formula\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n}\n',fragmentShader:"\n\nuniform float opacity;\n\nvarying vec2 vUV;\nvarying float vAmount;\n\nvoid main()\n{\n    gl_FragColor = vec4(0.0, vAmount * opacity, 0.0, 1.0);\n}\n",side:i.DoubleSide})]})};n.default=function(){var e=Object(a.useState)(0),n=Object(r.a)(e,2),t=n[0],c=n[1],s=Object(a.useState)(new i.Clock),u=Object(r.a)(s,2),f=u[0];u[1];return Object(g.jsxs)("div",{className:"fill-content",children:[Object(g.jsx)("div",{style:{position:"absolute",top:0,left:0,height:"100vh",width:"100vw",backgroundColor:"black"}}),Object(g.jsxs)(o.a,{style:{position:"absolute",top:0,left:0,height:"100vh",width:"100vw"},children:[Object(g.jsx)(l,{position:[.05896666849764306,1.0630507657317696,.9790701530639065],rotation:[-.8264992153403403,.040778606785100945,.04423528266176858],near:.01,far:1e3,makeDefault:!0}),Object(g.jsx)("color",{attach:"background",args:["#000"]}),Object(g.jsxs)(a.Suspense,{fallback:!0,children:[Object(g.jsx)(y,{noisePos:t,clock:f,callback:c}),Object(g.jsx)("ambientLight",{})]})]}),Object(g.jsx)("div",{className:"title-card center-vertically",style:{position:"relative",color:"white",margin:"2em 1em"},children:Object(g.jsxs)("p",{style:{fontSize:"2vw",margin:"0 2em",padding:"0 20px",background:"rgba(0,0,0,0.75)"},children:[Object(g.jsx)("span",{style:{color:"#569cd6"},children:"const"})," ",Object(g.jsx)("span",{style:{color:"#fcfc9f"},children:"Info"})," = () ",Object(g.jsx)("span",{style:{color:"#569cd6"},children:"=>"})," ","{",Object(g.jsx)("span",{style:{color:"#ce9178"},children:'"'}),Object(g.jsxs)("div",{style:{margin:"0 2em",color:"#ce9178"},children:[Object(g.jsx)("br",{}),Object(g.jsx)("span",{style:{color:"#ce9178"},children:"I'm Henry, a computer science student studying at the University of Bath."}),Object(g.jsx)("br",{}),"I'm particularly interested in machine learning and graphics.",Object(g.jsx)("br",{}),Object(g.jsx)("br",{}),"You can find my projects ",Object(g.jsx)("a",{href:"https://skittss.github.io/PortfolioWebsite/#/projects",children:"here"}),".",Object(g.jsx)("br",{}),Object(g.jsx)("br",{})]}),Object(g.jsx)("span",{style:{color:"#ce9178"},children:'"'}),"};",Object(g.jsx)("span",{className:"animated-cursor"})]})})]})}},93:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=t(104);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(a).default}})}}]);
//# sourceMappingURL=11.271c376d.chunk.js.map