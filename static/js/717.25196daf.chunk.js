"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[717],{51717:(e,n,t)=>{t.r(n),t.d(n,{default:()=>ke});var r=t(27565),i=t(73293),s=t(66804),a=t(15314),l=t(86399),o=t(28370),u=t.n(o),d=t(24186),c=t(20791),m=t(39432),f=t(40489),h=t(2225),g=t(45577),v=t(23013),x=t(57660),p=t(80345),y=t(88475),j=t(13975),w=t(4533),M=t(57292),D=t(27929);const{Dragger:b}=j.A,C=e=>{let{loading:n}=e;return n?(0,D.jsx)(p.A,{spin:!0}):(0,D.jsx)(M.A,{})},S=e=>{let{onLoadCallback:n,style:t}=e;const[i,s]=(0,r.useState)(!1);return(0,D.jsxs)(b,{style:t,name:"source-image",multiple:!1,listType:"picture-card",className:"src-img-uploader",showUploadList:!1,customRequest:async e=>{let{file:n,onSuccess:t}=e;new Promise((e=>{setTimeout((()=>{let t=URL.createObjectURL(n),r=new Image;r.onload=()=>{e({src:t,dim:{width:r.width,height:r.height}})},r.src=t}),30)})).then((e=>t(e)))},beforeUpload:e=>!("image/png"!==e.type&&"image/jpeg"!==e.type)||(w.Ay.error("Only PNG/JPEG files are supported."),!1),onChange:e=>{"uploading"===e.file.status?s(!0):"done"===e.file.status?(s(!1),n(e.file.response)):(s(!1),console.log(e.file.status))},children:[(0,D.jsx)("p",{className:"ant-upload-drag-icon",children:(0,D.jsx)(C,{loading:i})}),(0,D.jsx)("p",{className:"ant-upload-text",children:"Click or drag an image to this area to begin"}),(0,D.jsx)("p",{className:"ant-upload-hint",children:"(large images may take a long time to process)"})]})};var U=t(58040);const A=e=>{let{img:n,dim:t}=e;const r=(0,a.F)(U.TextureLoader,n);r.minFilter=U.LinearFilter;const[i,s]=function(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const{viewport:r,aspect:i}=(0,a.A)(),s=n*(i>e/n?r.width/e:r.height/n);return[e*(i>e/n?r.width/e:r.height/n)*t,s*t,1]}(t.width,t.height);return(0,D.jsxs)("mesh",{scale:[i,s,1],children:[(0,D.jsx)("planeGeometry",{attach:"geometry"}),(0,D.jsx)("meshBasicMaterial",{attach:"material",map:r,depthTest:!1,toneMapped:!1})]})};var T=t(84095);new U.Vector3;const k="\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t}",R="\n\t\tuniform float opacity;\n\t\tuniform sampler2D tDiffuse;\n        uniform vec3 weights;\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\t\t\tvec4 texel = pow(texture2D( tDiffuse, vUv ), vec4(1.0 / 2.2));\n            float w_a = weights.x * texel.x + weights.y * texel.y + weights.z * texel.z;\n\t\t\tgl_FragColor = vec4(w_a, w_a, w_a, 1.0);\n            //gl_FragColor = vec4(texel.rgba);\n\t\t}",_=(new Array(128),"\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }"),F="\n        uniform float hRes;\n        uniform int kernelSize;\n        uniform float kernel[128];\n        uniform sampler2D tDiffuse;\n\n        varying vec2 vUv;\n\n        void main() {\n            \n            if (hRes > 0.0) {\n                vec4 color = texture2D(tDiffuse, vUv) * kernel[0];\n    \n                for (int i=1; i < 128; i++) {\n                    if (i == kernelSize) break;\n                    color += texture2D(tDiffuse, vUv + vec2(float(i)/hRes, 0.0)) * kernel[i];\n                    color += texture2D(tDiffuse, vUv - vec2(float(i)/hRes, 0.0)) * kernel[i];\n                }\n    \n                gl_FragColor = color;\n            }\n        }",V=(new Array(128),"\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }"),G="            \n        uniform float vRes;\n        uniform int kernelSize;\n        uniform float kernel[128];\n        uniform sampler2D tDiffuse;\n        \n        varying vec2 vUv;\n\n        void main() {\n\n            if (vRes > 0.0) {\n                vec4 color = texture2D(tDiffuse, vUv) * kernel[0];\n    \n                for (int i=1; i < 128; i++) {\n                    if (i == kernelSize) break;\n                    color += texture2D(tDiffuse, vUv + vec2(0.0, float(i)/vRes)) * kernel[i];\n                    color += texture2D(tDiffuse, vUv - vec2(0.0, float(i)/vRes)) * kernel[i];\n                }\n    \n                gl_FragColor = color;\n            }\n        }",P=(new U.Vector2,new Array(9),new Array(9),"\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }"),N="\n\n        precision highp float;\n\n        uniform sampler2D tDiffuse;\n        uniform float max;\n\n        varying vec2 vUv;\n\n        void main() {\n\n            float v = texture2D(tDiffuse, vUv).x;\n            float norm = v / max;\n\n            gl_FragColor = vec4(norm, norm, norm, 1.0);\n\n        }",B="\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",L="\n\n        precision highp float;\n\n        uniform sampler2D tDiffuse;\n        uniform float max;\n        uniform float high;\n        uniform float low;\n\n        varying vec2 vUv;\n\n        void main() {\n\n            float v = texture2D(tDiffuse, vUv).x;\n\n            vec4 texel;\n            if (v <= low) {\n                texel = vec4(0.0, 0.0, 0.0, 1.0);\n            } else if (v < high) {\n                texel = vec4(0.3, 0.3, 0.3, 1.0);\n            } else {\n                texel = vec4(1.0);\n            }\n\n            gl_FragColor = texel;\n\n        }",z=(new U.Vector2,"\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }"),W="\n\n        precision highp float;\n\n        uniform sampler2D tDiffuse;\n        uniform vec2 dims;\n        uniform int tolerance;\n\n        varying vec2 vUv;\n\n        void main() {\n            \n            if (dims.x > 0.0 && dims.y > 0.0) {\n                // vec2 coord = vec2(gl_FragCoord.x/dims.x, gl_FragCoord.y/dims.y);\n                // float v = texture2D(tDiffuse, coord).x;\n                // if (v < 0.7) v = 0.0;\n\n                float v = 0.0;\n                for (int j = -tolerance; j <= tolerance; j++) {\n                    for (int i = -tolerance; i <= tolerance; i++) {\n                        \n                        vec2 coord = vec2(gl_FragCoord.x/dims.x, gl_FragCoord.y/dims.y) + vec2( float(i)/dims.x, float(j)/dims.y );\n    \n                        if ( texture2D(tDiffuse, coord).x > 0.7) {\n    \n                            v = 1.0;\n                            break;\n    \n                        }\n    \n                    }\n                }\n    \n                gl_FragColor = vec4(v, v, v, 1.0);\n            }\n        }",I="\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",E="\n\n        precision highp float;\n\n        uniform sampler2D tDilate;\n        uniform sampler2D tDiffuse;\n\n        varying vec2 vUv;\n\n        void main() {\n\n            float dilate = texture2D(tDilate, vUv).x;\n            float weak = texture2D(tDiffuse, vUv).x;\n\n            if (weak < 1.0 && weak > 0.0 && dilate > 0.3) {\n                weak = 1.0;\n            }\n\n            gl_FragColor = vec4(weak, weak, weak, 1.0);\n        }",H=(new U.Vector2,"\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }"),O="\n\n        precision highp float;\n\n        uniform sampler2D tDiffuse;\n        uniform vec2 dims;\n\n        void main() {\n\n            vec2 coord = vec2(gl_FragCoord.x/dims.x, gl_FragCoord.y/dims.y);\n\n            float v = texture2D(tDiffuse, coord).x;\n            if ( v <= 0.7 ) {\n                v = 0.0;\n            }\n\n            gl_FragColor = vec4(v, v, v, 1.0);\n\n        }",Y="\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",X="\n\n        precision highp float;\n\n        uniform sampler2D tDiffuse;\n\n        varying vec2 vUv;\n\n        void main() {\n\n            gl_FragColor = texture2D(tDiffuse, vUv);\n\n        }";let q,J,K,Q,Z,$,ee,ne,te,re,ie;class se extends U.ShaderMaterial{constructor(e){super({type:"CustomMaterial",uniforms:{tDiffuse:new U.Uniform(null),weights:new U.Uniform(new U.Vector3)},fragmentShader:R,vertexShader:k,toneMapped:!1,depthWrite:!1,depthTest:!1}),q=e}}class ae extends T.oF{constructor(e){super("GrayscalePass"),this.fullscreenMaterial=new se(e)}render(e,n,t,r,i){const s=this.fullscreenMaterial;s.uniforms.tDiffuse.value=n?n.texture:null,s.uniforms.weights.value=q,e.setRenderTarget(this.renderToScreen?null:t),e.render(this.scene,this.camera)}}class le extends U.ShaderMaterial{constructor(e,n,t){super({type:"CustomMaterial",uniforms:{tDiffuse:new U.Uniform(null),kernelSize:new U.Uniform(0),kernel:new U.Uniform([0]),hRes:new U.Uniform(0)},fragmentShader:F,vertexShader:_,toneMapped:!1,depthWrite:!1,depthTest:!1}),J=e,K=n,Q=t}}class oe extends T.oF{constructor(e,n,t){super("HorizontalBlurPass"),this.fullscreenMaterial=new le(e,n,t)}render(e,n,t,r,i){const s=this.fullscreenMaterial;s.uniforms.tDiffuse.value=n?n.texture:null,s.uniforms.kernel.value=J,s.uniforms.kernelSize.value=K,s.uniforms.hRes.value=Q,e.setRenderTarget(this.renderToScreen?null:t),e.render(this.scene,this.camera)}}class ue extends U.ShaderMaterial{constructor(e,n,t){super({type:"CustomMaterial",uniforms:{tDiffuse:new U.Uniform(null),kernelSize:new U.Uniform(0),kernel:new U.Uniform([0]),vRes:new U.Uniform(0)},fragmentShader:G,vertexShader:V,toneMapped:!1,depthWrite:!1,depthTest:!1}),Z=e,$=n,ee=t}}class de extends T.oF{constructor(e,n,t){super("VerticalBlurPass"),this.fullscreenMaterial=new ue(e,n,t)}render(e,n,t,r,i){const s=this.fullscreenMaterial;s.uniforms.tDiffuse.value=n?n.texture:null,s.uniforms.kernel.value=Z,s.uniforms.kernelSize.value=$,s.uniforms.vRes.value=ee,e.setRenderTarget(this.renderToScreen?null:t),e.render(this.scene,this.camera)}}U.ShaderMaterial;T.oF;class ce extends U.ShaderMaterial{constructor(e,n,t){super({type:"CustomMaterial",uniforms:{tDiffuse:new U.Uniform(null),max:new U.Uniform(0),high:new U.Uniform(0),low:new U.Uniform(0)},fragmentShader:L,vertexShader:B,toneMapped:!1,depthWrite:!1,depthTest:!1}),ne=e,te=n,re=t}}class me extends U.ShaderMaterial{constructor(){super({type:"CustomMaterial",uniforms:{tDiffuse:new U.Uniform(null),max:new U.Uniform(0)},fragmentShader:N,vertexShader:P,toneMapped:!1,depthWrite:!1,depthTest:!1})}}class fe extends T.oF{constructor(e,n,t,r,i){super("GpuComputePass"),this.doNMS=r,this.threshold=i,this._normShaderMaterial=new me,i&&(this._thresholdShaderMaterial=new ce),this.dims=t,this.sobelGpuCompute=e.gpuCompute,this.magnitudeVariable=e.magnitudeVariable,this.magnitudeUniforms=e.magnitudeUniforms,this.argumentVariable=e.argumentVariable,this.argumentUniforms=e.argumentUniforms,r&&(this.nmsGpuCompute=n.nmsGpuCompute,this.nmsVariable=n.nmsVariable,this.nmsUniforms=n.nmsUniforms)}render(e,n,t,r,i){let s;this.magnitudeUniforms.tDiffuse.value=n.texture,this.doNMS&&(this.argumentUniforms.tDiffuse.value=n.texture),this.sobelGpuCompute.compute(),this.doNMS?(this.nmsUniforms.tMags.value=this.sobelGpuCompute.getCurrentRenderTarget(this.magnitudeVariable).texture,this.nmsUniforms.tArgs.value=this.sobelGpuCompute.getCurrentRenderTarget(this.argumentVariable).texture,this.nmsUniforms.dim.value=this.dims,this.nmsGpuCompute.compute(),s=this.nmsGpuCompute.getCurrentRenderTarget(this.nmsVariable)):s=this.sobelGpuCompute.getCurrentRenderTarget(this.magnitudeVariable);let a=new Float32Array(4*this.dims[0]*this.dims[1]);e.readRenderTargetPixels(s,0,0,this.dims[0],this.dims[1],a);let l=0;for(let o=0;o<a.length;o+=4)a[o]>l&&(l=a[o]);if(this.renderToScreen&&!this.threshold){this.fullscreenMaterial=this._normShaderMaterial;const t=this.fullscreenMaterial;t.uniforms.tDiffuse.value=s.texture,t.uniforms.max.value=Math.max(l,0),e.setRenderTarget(this.renderToScreen?null:n),e.render(this.scene,this.camera)}if(this.threshold){let n=this.threshold.high*l;this.fullscreenMaterial=this._thresholdShaderMaterial;const r=this.fullscreenMaterial;r.uniforms.tDiffuse.value=s.texture,r.uniforms.max.value=l,r.uniforms.high.value=n,r.uniforms.low.value=this.threshold.low*n,e.setRenderTarget(this.renderToScreen?null:t),e.render(this.scene,this.camera)}}}class he extends U.ShaderMaterial{constructor(){super({type:"CustomMaterial",uniforms:{tDiffuse:new U.Uniform(null)},fragmentShader:X,vertexShader:Y,toneMapped:!1,depthWrite:!1,depthTest:!1})}}class ge extends U.ShaderMaterial{constructor(e,n){super({type:"CustomMaterial",uniforms:{tDiffuse:new U.Uniform(null),dims:new U.Uniform(e),tolerance:new U.Uniform(n)},fragmentShader:W,vertexShader:z,toneMapped:!1,depthWrite:!1,depthTest:!1})}}class ve extends U.ShaderMaterial{constructor(){super({type:"CustomMaterial",uniforms:{tDilate:new U.Uniform(null),tDiffuse:new U.Uniform(null)},fragmentShader:E,vertexShader:I,toneMapped:!1,depthWrite:!1,depthTest:!1})}}class xe extends T.oF{constructor(e,n,t,r){super("HysteresisPass"),this.iterations=n,0==n&&(this.copyMaterial=new he),this.dilationMaterial=new ge(r,e),this.hysMaterial=new ve}render(e,n,t,r,i){if(this.intermediateRt=t.clone(),0==this.iterations){this.fullscreenMaterial=this.copyMaterial;this.fullscreenMaterial.uniforms.tDiffuse.value=n.texture,e.setRenderTarget(null),e.render(this.scene,this.camera)}else{this.hysMaterial.uniforms.tDiffuse.value=n.texture;for(let r=0;r<this.iterations;r++)this.dilationMaterial.uniforms.tDiffuse.value=0==r?n.texture:t.texture,this.fullscreenMaterial=this.dilationMaterial,e.setRenderTarget(this.intermediateRt),this.clear&&e.clear(),e.render(this.scene,this.camera),this.hysMaterial.uniforms.tDilate.value=this.intermediateRt.texture,this.fullscreenMaterial=this.hysMaterial,r==this.iterations-1&&this.renderToScreen?(e.setRenderTarget(null),e.render(this.scene,this.camera)):(e.setRenderTarget(t),e.render(this.scene,this.camera))}this.intermediateRt.dispose(),delete this.intermediateRt}}class pe extends U.ShaderMaterial{constructor(e){super({type:"CustomMaterial",uniforms:{tDiffuse:new U.Uniform(null),dims:new U.Uniform(new U.Vector2)},fragmentShader:O,vertexShader:H,toneMapped:!1,depthWrite:!1,depthTest:!1}),ie=e}}class ye extends T.oF{constructor(e){super("CopyStrongPass"),this.fullscreenMaterial=new pe(e)}render(e,n,t,r,i){const s=this.fullscreenMaterial;s.uniforms.tDiffuse.value=n?n.texture:null,s.uniforms.dims.value=ie,e.setRenderTarget(this.renderToScreen?null:t),e.render(this.scene,this.camera)}}var je=t(31429);const we=e=>{let n=e.image.data;for(let t=0;t<n.length;t++)n[t]=0},Me=(e,n,t,r)=>{let i=new je.d(n[0],n[1],e),s=i.createTexture();we(s);let a,l,o=i.addVariable("textureMagnitude","\n    precision highp float;\n\n    uniform vec2 dim;\n    uniform float GX[9];\n    uniform float GY[9];\n    uniform sampler2D tDiffuse;\n\n    void main() {\n        \n        vec4 gx = vec4(0.0);\n        vec4 gy = vec4(0.0);\n        vec4 v;\n\n        for (int j=0; j<3; j++) {\n            for (int i=0; i<3; i++) {\n                v = texture2D(tDiffuse, vec2(gl_FragCoord.x/dim.x, gl_FragCoord.y/dim.y) + vec2( float(i-1)/dim.x, float(j-1)/dim.y ) );\n                gx += GX[j * 3 + i] * v;\n                gy += GY[j * 3 + i] * v;\n            }\n        }\n\n        vec4 mag = sqrt(gx * gx + gy * gy);\n        gl_FragColor = vec4(mag.x, mag.y, mag.z, 1.0);\n    }",s);r?(l=i.createTexture(),we(l),a=i.addVariable("textureArgument","\n    precision highp float;\n\n    uniform vec2 dim;\n    uniform float GX[9];\n    uniform float GY[9];\n    uniform sampler2D tDiffuse;\n\n    void main() {\n        \n        vec4 gx = vec4(0.0);\n        vec4 gy = vec4(0.0);\n        vec4 v;\n\n        for (int j=0; j<3; j++) {\n            for (int i=0; i<3; i++) {\n                v = texture2D(tDiffuse, vec2(gl_FragCoord.x/dim.x, gl_FragCoord.y/dim.y) + vec2( float(i-1)/dim.x, float(j-1)/dim.y ) );\n                gx += GX[j * 3 + i] * v;\n                gy += GY[j * 3 + i] * v;\n            }\n        }\n\n        vec4 mag = sqrt(gx * gx + gy * gy);\n        float arg = atan(gy.x, gx.x);\n\n        gl_FragColor = vec4(arg, arg, arg, arg);\n    }",l),i.setVariableDependencies(o,[a,o]),i.setVariableDependencies(a,[a,o])):i.setVariableDependencies(o,[o]);let u,d=o.material.uniforms;d.GX={value:t.gx},d.GY={value:t.gy},d.dim={value:n},d.tDiffuse={value:null},r&&(u=a.material.uniforms,u.GX={value:t.gx},u.GY={value:t.gy},u.dim={value:n},u.tDiffuse={value:null});const c=i.init();return null!==c?(console.error(c),null):{gpuCompute:i,magnitudeVariable:o,magnitudeUniforms:d,magnitudeUniforms:d,argumentVariable:a,argumentUniforms:u,texture:l,texture_2:s}},De=(e,n,t)=>{if(!t)return null;let r=new je.d(n[0],n[1],e),i=r.createTexture();we(i);let s=r.addVariable("textureNms","\n\n    uniform sampler2D tMags;\n    uniform sampler2D tArgs;\n    uniform vec2 dim;\n\n    void main() {\n        \n        vec2 current = vec2(gl_FragCoord.x/dim.x, gl_FragCoord.y/dim.y);\n\n        float m = texture2D(tMags, current).x;\n        float a = texture2D(tArgs, current).x;\n\n        float hComp = cos(a);\n        float vComp = sin(a);\n        float xTranslate = sign(hComp);\n        float yTranslate = sign(vComp);\n\n        vec2 translate = vec2(xTranslate/dim.x, yTranslate/dim.y);\n        vec2 a1 = current + translate;\n        vec2 a2 = current - translate;\n        float ag1 = texture2D(tMags, a1).x;\n        float ag2 = texture2D(tMags, a2).x;\n\n        vec2 b1, b2;\n        float bg1, bg2;\n\n        float g1, g2;\n\n        if (abs(hComp) > abs(vComp)) {\n            translate = vec2(xTranslate/dim.x, 0.0);\n            b1 = current + vec2(translate);\n            b2 = current - vec2(translate);\n            bg1 = texture2D(tMags, b1).x;\n            bg2 = texture2D(tMags, b2).x;\n            g1 = ag1 * abs(vComp) + (1.0-abs(vComp)) * bg1;\n            g2 = ag2 * abs(vComp) + (1.0-abs(vComp)) * bg2;\n        }\n        else {\n            translate = vec2(0.0, yTranslate/dim.y);\n            b1 = current + vec2(translate);\n            b2 = current - vec2(translate);\n            bg1 = texture2D(tMags, b1).x;\n            bg2 = texture2D(tMags, b2).x;\n            g1 = ag1 * abs(hComp) + (1.0-abs(hComp)) * bg1;\n            g2 = ag2 * abs(hComp) + (1.0-abs(hComp)) * bg2;\n        }\n\n        if (g1 > m || g2 > m) {\n            m = 0.0;\n        }\n\n        gl_FragColor = vec4(m, m, m, 1.0);\n\n    }",i);r.setVariableDependencies(s,[s]);let a=s.material.uniforms;a.dim={value:n},a.tMags={value:null},a.tArgs={value:null};const l=r.init();return null!==l?(console.error(l),null):{nmsGpuCompute:r,nmsVariable:s,nmsUniforms:a,textures:[i]}},be=(e,n,t,r)=>({sobel:Me(e,n,t,r),nms:De(e,n,r)}),Ce=(e,n)=>{let t,r=0,i=[],s=1/(Math.sqrt(2*Math.PI)*n);for(let a=0;a<=e;a++)t=Math.exp(-Math.pow(a,2)/(2*Math.pow(n,2))),i[a]=s*t,r+=0===a?i[a]:2*i[a];for(let a=0;a<=e;a++)i[a]/=r;return i};(0,a.e)({EffectComposer:T.s0});const{Option:Se}=d.A,Ue={"BT.601":[.299,.587,.114],"BT.709":[.2126,.7152,.0722],"BT.2100":[.2627,.678,.0593],Mean:[.3333,.3333,.3333]},Ae={sobel:{gx:[1,0,-1,2,0,-2,1,0,-1],gy:[1,2,1,0,0,0,-1,-2,-1]},prewitt:{gx:[1,0,-1,1,0,-1,1,0,-1],gy:[1,1,1,0,0,0,-1,-1,-1]}},Te=()=>{const[e,n]=(0,r.useState)(0),t=(0,r.useRef)(),[i,s]=(0,r.useState)({width:0,height:0}),[o,j]=(0,r.useState)(null),[w,M]=(0,r.useState)(null),[b,C]=(0,r.useState)(!0),[k,R]=(0,r.useState)(null),[_,F]=(0,r.useState)("BT.601"),[V,G]=(0,r.useState)(Ue[_]),[P,N]=(0,r.useState)(3),[B,L]=(0,r.useState)(1),[z,W]=(0,r.useState)("sobel"),[I,E]=(0,r.useState)(Ae[z]),[H,O]=(0,r.useState)(.3),[Y,X]=(0,r.useState)(.3),[q,J]=(0,r.useState)(1),[K,Q]=(0,r.useState)(1),[Z,$]=(0,r.useState)(null),[ee,ne]=(0,r.useState)(null),[te,re]=(0,r.useState)(null),[ie,se]=(0,r.useState)(null),[le,ue]=(0,r.useState)(null),[ce,me]=(0,r.useState)(!1),he=e=>{w&&URL.revokeObjectURL(w),M(e)},ge=e=>0<=e&&e<7,ve={0:(0,D.jsx)(D.Fragment,{children:(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center",paddingBottom:"10px"},children:[(0,D.jsx)(m.A,{flex:"120px",children:"Encoding Type"}),(0,D.jsx)(m.A,{flex:"auto",children:(0,D.jsxs)(d.A,{defaultValue:_,onChange:e=>{F(e),G(Ue[e])},children:[(0,D.jsx)(Se,{value:"BT.601",children:"BT.601"}),(0,D.jsx)(Se,{value:"BT.709",children:"BT.709"}),(0,D.jsx)(Se,{value:"BT.2100",children:"BT.2100"}),(0,D.jsx)(Se,{value:"Mean",children:"Mean"})]})})]})}),1:(0,D.jsxs)(D.Fragment,{children:[(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center",paddingBottom:"10px"},children:[(0,D.jsx)(m.A,{flex:"60px",children:"Radius"}),(0,D.jsx)(m.A,{flex:"auto",children:(0,D.jsx)(f.A,{value:P,onChange:e=>N(e),min:0,max:20})}),(0,D.jsx)(m.A,{flex:"100px",align:"right",children:(0,D.jsx)(h.A,{value:P,onChange:e=>N(e),min:0,max:20})})]}),(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center"},children:[(0,D.jsx)(m.A,{flex:"60px",children:"Sigma (\u03c3)"}),(0,D.jsx)(m.A,{flex:"auto",children:(0,D.jsx)(f.A,{defaultValue:B,onChange:e=>L(e),min:.01,max:15,step:.01})}),(0,D.jsx)(m.A,{flex:"100px",align:"right",children:(0,D.jsx)(h.A,{value:B,onChange:e=>L(e),min:0,max:20,step:.01})})]})]}),2:(0,D.jsx)(D.Fragment,{children:(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center",paddingBottom:"10px"},children:[(0,D.jsx)(m.A,{flex:"70px",children:"Operator"}),(0,D.jsx)(m.A,{flex:"auto",children:(0,D.jsxs)(d.A,{defaultValue:z,onChange:e=>{W(e),E(Ae[e])},children:[(0,D.jsx)(Se,{value:"sobel",children:"Sobel"}),(0,D.jsx)(Se,{value:"prewitt",children:"Prewitt"})]})})]})}),3:(0,D.jsx)("p",{children:(0,D.jsx)("i",{children:"(No options available)"})}),4:(0,D.jsxs)(D.Fragment,{children:[(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center",paddingBottom:"10px"},children:[(0,D.jsx)(m.A,{flex:"60px",children:"High"}),(0,D.jsx)(m.A,{flex:"auto",children:(0,D.jsx)(f.A,{value:Y,onChange:e=>X(e),min:0,max:1,step:.01})}),(0,D.jsx)(m.A,{flex:"100px",align:"right",children:(0,D.jsx)(h.A,{value:Y,onChange:e=>X(e),min:0,max:1,step:.01})})]}),(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center"},children:[(0,D.jsx)(m.A,{flex:"60px",children:"Low"}),(0,D.jsx)(m.A,{flex:"auto",children:(0,D.jsx)(f.A,{value:H,onChange:e=>O(e),min:0,max:1,step:.01})}),(0,D.jsx)(m.A,{flex:"100px",align:"right",children:(0,D.jsx)(h.A,{value:H,onChange:e=>O(e),min:0,max:1,step:.01})})]})]}),5:(0,D.jsxs)(D.Fragment,{children:[(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center",paddingBottom:"10px"},children:[(0,D.jsx)(m.A,{flex:"100px",children:"Tolerance (px)"}),(0,D.jsx)(m.A,{flex:"auto",children:(0,D.jsx)(f.A,{value:q,onChange:e=>J(e),min:0,max:5})}),(0,D.jsx)(m.A,{flex:"100px",align:"right",children:(0,D.jsx)(h.A,{value:q,onChange:e=>J(e),min:0,max:5})})]}),(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center"},children:[(0,D.jsx)(m.A,{flex:"100px",children:"Iterations"}),(0,D.jsx)(m.A,{flex:"auto",children:(0,D.jsx)(f.A,{value:K,onChange:e=>Q(e),min:0,max:500})}),(0,D.jsx)(m.A,{flex:"100px",align:"right",children:(0,D.jsx)(h.A,{value:K,onChange:e=>Q(e),min:0,max:500})})]})]})},pe=e=>{if(e){if(e.sobel){for(const[n,t]of Object.entries(e.sobel))t&&(t.dispose&&t.dispose(),delete e.sobel[n]);e.sobel=null}if(e.nms){for(const[n,t]of Object.entries(e.nms))t&&(t.dispose&&t.dispose(),delete e.nms[n]);e.nms=null}}},je=()=>{const n=(0,r.useRef)(),{scene:i,gl:s,size:l,camera:o}=(0,a.A)();let u=ie,d={r:P,s:B};null==te?(re(d),u=Ce(d.r,d.s),se(u)):d.r==te.r&&d.s==te.s||(re(d),u=Ce(d.r,d.s),se(u));const c=u,m=c.length;let f=Z,h={gl:s,dims:[t.current.offsetWidth,t.current.offsetHeight],kernel:I,doNMS:e>2};return null==ee&&(ne(h),f=be(h.gl,h.dims,h.kernel,h.doNMS),$(f)),null==k?R({tg:new U.WebGLRenderTarget(h.dims.x,h.dims.y)}):h.gl==ee.gl&&h.dims[0]==ee.dims[0]&&h.dims[1]==ee.dims[1]&&h.kernel==ee.kernel&&h.doNMS==ee.doNMS||(ne(h),pe(f),f=be(h.gl,h.dims,h.kernel,h.doNMS),$(f),h.dims[0]==ee.dims[0]&&h.dims[1]==ee.dims[1]||(k.tg&&(k.tg.dispose&&k.tg.dispose(),delete k.tg),R({tg:new U.WebGLRenderTarget(h.dims.x,h.dims.y)}))),s!=le&&ue(s),(0,r.useEffect)((()=>{n.current.addPass(new T.AH(i,o)),e>=0&&n.current.addPass(new ae(V)),e>=1&&n.current.addPass(new oe(c,m,t.current.offsetWidth)),e>=1&&n.current.addPass(new de(c,m,t.current.offsetHeight)),e>=2&&n.current.addPass(new fe(f.sobel,f.nms,h.dims,!1,null)),e>=3&&n.current.addPass(new fe(f.sobel,f.nms,h.dims,!0,null)),e>=4&&n.current.addPass(new fe(f.sobel,f.nms,h.dims,!0,{high:Y,low:H})),e>=5&&n.current.addPass(new xe(q,K,k.tg,h.dims)),e>=6&&n.current.addPass(new ye(h.dims)),n.current.render()}),[]),(0,a.C)((()=>{n.current.render()}),1),(0,D.jsx)("effectComposer",{ref:n,args:[s]})};return(0,D.jsxs)("div",{className:"fill-container",children:[(0,D.jsx)(u(),{visible:b,children:(0,D.jsx)(S,{onLoadCallback:e=>{he(e.src),j(e.dim),C(!1)},style:{display:function(){let{reverse:e=!1,value:n="block"}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e?b?"none":n:b?n:"none"}()}})}),null!=w&&null!=o?(0,D.jsxs)("div",{className:"fill-container",children:[(0,D.jsx)(u(),{className:"fill-and-vertically-center",children:(0,D.jsxs)(c.A,{gutter:[16,16],justify:"center",align:"middle",style:{display:"flex",alignItems:"center",marginRight:"0"},children:[(0,D.jsx)(m.A,{className:"process-preview-grid-col",flex:1,children:(0,D.jsx)("div",{className:"process-preview-container",children:(0,D.jsx)("div",{ref:t,children:(0,D.jsx)(g.A,{id:"preview-before",src:w,onLoad:()=>s({width:t.current.offsetWidth,height:t.current.offsetHeight})})})})}),(0,D.jsx)(m.A,{className:"process-preview-grid-col",flex:1,children:(0,D.jsx)("div",{className:"process-preview-container",children:(0,D.jsxs)(l.Hl,{className:"shader",camera:{fov:50,position:[0,0,30]},gl:{preserveDrawingBuffer:!0},style:{position:"relative",width:i.width,height:i.height},children:[(0,D.jsx)(A,{img:w,dim:{width:o.width,height:o.height}}),(0,D.jsx)(je,{})]})})}),(0,D.jsxs)(m.A,{className:"process-preview-grid-col",flex:1,style:{alignSelf:"stretch"},children:[(0,D.jsxs)(c.A,{style:{display:"flex",alignItems:"center",paddingBottom:"10px"},children:[(0,D.jsx)(m.A,{children:(0,D.jsx)(v.Ay,{onClick:()=>n((e=>e-1)),disabled:!ge(e-1),children:"Previous"})}),(0,D.jsx)(m.A,{flex:"auto",align:"center",children:(0,D.jsx)("h1",{id:"title",style:{display:"inline-block",alignSelf:"center"},children:(0,D.jsx)("b",{children:{0:"Grayscale Encoding",1:"Gaussian Blur",2:"Edgefinding Operation",3:"Non-maximum suppression",4:"Double Threshold",5:"Edge-Tracking (Hysteresis)",6:"Final Image"}[e]})})}),(0,D.jsx)(m.A,{align:"right",style:{paddingRight:"5px"},children:(0,D.jsx)(v.Ay,{onClick:()=>n((e=>e+1)),disabled:!ge(e+1),style:{float:"right"},children:"Next"})}),(0,D.jsx)(m.A,{align:"right",children:(0,D.jsx)(v.Ay,{type:"primary",onClick:async()=>{le&&(me(!0),new Promise((e=>{setTimeout((()=>{let n=le.domElement.toDataURL();e(n)}),30)})).then((n=>{let t=document.createElement("a");t.download="Canny_Step_"+e,t.href=n,t.click(),me(!1)})))},style:{float:"right"},children:ce?(0,D.jsx)(x.A,{size:"middle",indicator:(0,D.jsx)(p.A,{spin:!0,style:{color:"white"}})}):"Save"})})]}),(e=>(0,D.jsx)("div",{className:"processor-options",children:ve[e]}))(e)]})]})}),(0,D.jsx)(u(),{className:"back-overlay",visible:!b,children:(0,D.jsxs)(v.Ay,{id:"button",type:"link",style:{fontSize:"15px"},onClick:()=>{pe(Z),he(null),j(null),C(!0)},children:[(0,D.jsx)(y.A,{}),"Change image"]})})]}):null]})},ke=()=>{const[e,n]=(0,r.useState)(!1);return!1===e&&(i.Ay.open({message:"This project works best on a powerful machine!",description:(0,D.jsxs)("span",{children:["This page uses WebGL - a dedicated GPU is STRONGLY recommended.",(0,D.jsx)("br",{}),"Loading images which are too large or updating parameters too quickly ",(0,D.jsx)("i",{children:"may"})," cause the browser to run out of memory."]}),icon:(0,D.jsx)(s.A,{twoToneColor:"#FFA500"}),key:"performance-notif",style:{width:500}}),n(!0)),(0,D.jsx)("div",{className:"fill-container",children:Te()})}}}]);
//# sourceMappingURL=717.25196daf.chunk.js.map