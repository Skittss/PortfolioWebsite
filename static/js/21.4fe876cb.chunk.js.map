{"version":3,"sources":["web/navbar.jsx","web/routers/main.jsx"],"names":["Header","Layout","Navbar","getMenuKeyFromPath","pth","pathname","subrouteIndex","indexOf","length","substring","useState","useLocation","menuKey","setMenuKey","history","useHistory","useEffect","listen","loc","getCurrentDimension","screenSize","setScreenSize","width","window","innerWidth","height","innerHeight","updateDimension","addEventListener","removeEventListener","hidden","setHidden","previousScrollPosition","currentScrollPosition","e","pageYOffset","id","className","style","zIndex","paddingLeft","paddingRight","theme","mode","defaultSelectedKeys","selectedKeys","onClick","key","Item","opacity","visibility","transition","to","marginLeft","href","GithubOutlined","marginRight","fontSize","Content","routes","path","name","component","React","lazy","exact","Main","props","fallback","load","map","route","render","routerDepth","from"],"mappings":"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","file":"static/js/21.4fe876cb.chunk.js","sourcesContent":["import \"../css/navbar.scss\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { Link, useLocation, useHistory } from 'react-router-dom';\r\nimport { GithubOutlined } from '@ant-design/icons';\r\nconst { Header } = Layout;\r\n\r\nconst Navbar = () => {\r\n\r\n    function getMenuKeyFromPath(pth) {\r\n        const pathname = pth;\r\n        let subrouteIndex = pathname.indexOf(\"/\", 1);\r\n        subrouteIndex = subrouteIndex < 0 ? pathname.length : subrouteIndex;\r\n        return pathname === \"/\" ? \"/home\" : pathname.substring(0, subrouteIndex);\r\n    }\r\n    const [menuKey, setMenuKey] = useState(getMenuKeyFromPath(useLocation().pathname))\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        return history.listen((loc) => {\r\n            setMenuKey(getMenuKeyFromPath(loc.pathname))\r\n        })\r\n    }, [history])\r\n    const [screenSize, setScreenSize] = useState(getCurrentDimension());\r\n\r\n    function getCurrentDimension() {\r\n    \treturn {\r\n      \t\twidth: window.innerWidth,\r\n      \t\theight: window.innerHeight\r\n    \t}\r\n  \t}\r\n  \r\n  \tuseEffect(() => {\r\n    \t\tconst updateDimension = () => {\r\n      \t\t\tsetScreenSize(getCurrentDimension())\r\n    \t\t}\r\n    \t\twindow.addEventListener('resize', updateDimension);\r\n    \r\n\t\t\r\n    \t\treturn(() => {\r\n        \t\twindow.removeEventListener('resize', updateDimension);\r\n    \t\t})\r\n  \t}, [screenSize])\r\n    \r\n    const [hidden, setHidden] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let previousScrollPosition = 0;\r\n        let currentScrollPosition = 0;\r\n    \r\n        window.addEventListener('scroll', e => {\r\n    \r\n            // Get the new Value\r\n            currentScrollPosition = window.pageYOffset;\r\n\r\n            //Subtract the two and conclude\r\n            if (currentScrollPosition <= screenSize.height) {\r\n                setHidden(false);\r\n                return\r\n            }\r\n\r\n            if (previousScrollPosition - currentScrollPosition < 0) {\r\n            setHidden(true);\r\n            } else if (previousScrollPosition - currentScrollPosition > 0) {\r\n            setHidden(false);\r\n            }\r\n\r\n            // Update the previous value\r\n            previousScrollPosition = currentScrollPosition;\r\n        });\r\n    }, [screenSize.height]);\r\n\r\n    return (\r\n        <Header id=\"main-navbar\" className={`navigation ${hidden ? \"hidden\" : \"\"}`} style={{zIndex: 1, width: '100%', paddingLeft: 0, paddingRight: 0}}>\r\n            <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[menuKey]}\r\n                selectedKeys={[menuKey]}\r\n                onClick={({key}) => setMenuKey(key)}\r\n            >\r\n                <Menu.Item key=\"/home\" style={{opacity: menuKey === \"/home\" ? 0 : 1, visibility: menuKey === \"/home\" ? \"hidden\" : \"visible\", transition: \"all 0.3s ease-in\"}} hidden={hidden}>\r\n                    HOME\r\n                    <Link to=\"/home\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/projects\" style={{marginLeft: 'auto'}}>\r\n                    PROJECTS\r\n                    <Link to=\"/projects\"/>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/about\">\r\n                    ABOUT\r\n                    <Link to=\"/about\"/>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"github\">                    \r\n                    <a href={\"https://github.com/Skittss\"}>\r\n                        <GithubOutlined style={{marginRight: 0, fontSize: \"20px\"}}/>\r\n                    </a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Header> \r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { Suspense, useState } from 'react';\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"../navbar\";\r\nimport { Layout } from 'antd';\r\nimport { load } from \"../../App\";\r\nconst { Header, Content } = Layout;\r\n\r\nconst HomePage = React.lazy(() => import(\"../home/home\"));\r\nconst AboutPage = React.lazy(() => import(\"../about\"))\r\nconst ProjectRouter = React.lazy(() => import(\"../../projects/router\"));\r\n\r\nconst routes = [\r\n    { path: \"/home\", name: \"test\", component: HomePage, exact: true},\r\n    { path: \"/about\", name: \"about\", component: AboutPage, exact: true},\r\n    { path: \"/projects\", name: \"projects\", component: ProjectRouter, exact: false}\r\n\r\n];\r\n\r\nconst Main = props => {\r\n\r\n    return (\r\n        <Layout className=\"main\">\r\n            <Navbar />\r\n            <Content className=\"main-content\">\r\n                <Suspense fallback={load()}>\r\n                    <Switch>\r\n                        {routes.map(route => {\r\n                            return route.component ? (\r\n                                <Route \r\n                                    path={route.path}\r\n                                    exact={route.exact}\r\n                                    name={route.name}\r\n                                    render={props => (\r\n                                        <route.component {...props} routerDepth={1}/>\r\n                                    )}\r\n                                />\r\n                            ) : null;\r\n                        })}\r\n                        <Redirect exact from=\"/\" to=\"home\" />\r\n                    </Switch>\r\n                </Suspense>\r\n            </Content>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Main;"],"sourceRoot":""}