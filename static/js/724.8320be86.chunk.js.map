{"version":3,"file":"static/js/724.8320be86.chunk.js","mappings":"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","sources":["web/navbar.jsx","web/routers/main.jsx"],"sourcesContent":["import \"../css/navbar.scss\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { GithubOutlined } from '@ant-design/icons';\r\nconst { Header } = Layout;\r\n\r\nconst Navbar = () => {\r\n\r\n    function useLocationEffect(callback) {\r\n        const location = useLocation();\r\n\r\n        useEffect(() => {\r\n            callback(location);\r\n        }, [location, callback])\r\n    }\r\n\r\n    function getMenuKeyFromPath(pth) {\r\n        const pathname = pth;\r\n        let subrouteIndex = pathname.indexOf(\"/\", 1);\r\n        subrouteIndex = subrouteIndex < 0 ? pathname.length : subrouteIndex;\r\n        return pathname === \"/\" ? \"/home\" : pathname.substring(0, subrouteIndex);\r\n    }\r\n    const [menuKey, setMenuKey] = useState(getMenuKeyFromPath(useLocation().pathname))\r\n\r\n    useLocationEffect((loc) => {setMenuKey(getMenuKeyFromPath(loc.pathname));})\r\n\r\n    // const history = useNavigate()\r\n\r\n    // useEffect(() => {\r\n    //     return history.listen((loc) => {\r\n    //         setMenuKey(getMenuKeyFromPath(loc.pathname))\r\n    //     })\r\n    // }, [history])\r\n    const [screenSize, setScreenSize] = useState(getCurrentDimension());\r\n\r\n    function getCurrentDimension() {\r\n    \treturn {\r\n      \t\twidth: window.innerWidth,\r\n      \t\theight: window.innerHeight\r\n    \t}\r\n  \t}\r\n  \r\n  \tuseEffect(() => {\r\n    \t\tconst updateDimension = () => {\r\n      \t\t\tsetScreenSize(getCurrentDimension())\r\n    \t\t}\r\n    \t\twindow.addEventListener('resize', updateDimension);\r\n    \r\n\t\t\r\n    \t\treturn(() => {\r\n        \t\twindow.removeEventListener('resize', updateDimension);\r\n    \t\t})\r\n  \t}, [screenSize])\r\n    \r\n    const [hidden, setHidden] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let previousScrollPosition = 0;\r\n        let currentScrollPosition = 0;\r\n    \r\n        window.addEventListener('scroll', e => {\r\n    \r\n            // Get the new Value\r\n            currentScrollPosition = window.pageYOffset;\r\n\r\n            //Subtract the two and conclude\r\n            if (currentScrollPosition <= screenSize.height) {\r\n                setHidden(false);\r\n                return\r\n            }\r\n\r\n            if (previousScrollPosition - currentScrollPosition < 0) {\r\n            setHidden(true);\r\n            } else if (previousScrollPosition - currentScrollPosition > 0) {\r\n            setHidden(false);\r\n            }\r\n\r\n            // Update the previous value\r\n            previousScrollPosition = currentScrollPosition;\r\n        });\r\n    }, [screenSize.height]);\r\n\r\n    return (\r\n        <Header id=\"main-navbar\" className={`navigation ${hidden ? \"hidden\" : \"\"}`} style={{zIndex: 1, width: '100%', paddingLeft: 0, paddingRight: 0}}>\r\n            <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[menuKey]}\r\n                selectedKeys={[menuKey]}\r\n                onClick={({key}) => setMenuKey(key)}\r\n            >\r\n                <Menu.Item key=\"/home\" style={{opacity: menuKey === \"/home\" ? 0 : 1, visibility: menuKey === \"/home\" ? \"hidden\" : \"visible\", transition: \"all 0.3s ease-in\"}} hidden={hidden}>\r\n                    HOME\r\n                    <Link to=\"/home\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/projects\" style={{marginLeft: 'auto'}}>\r\n                    PROJECTS\r\n                    <Link to=\"/projects\"/>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/about\">\r\n                    ABOUT\r\n                    <Link to=\"/about\"/>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"github\">                    \r\n                    <a href={\"https://github.com/Skittss\"}>\r\n                        <GithubOutlined style={{marginRight: 0, fontSize: \"20px\"}}/>\r\n                    </a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Header> \r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { Suspense, useState } from 'react';\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport Navbar from \"../navbar\";\r\nimport { Layout } from 'antd';\r\nimport { load } from \"../../App\";\r\nconst { Header, Content } = Layout;\r\n\r\n// Top Level\r\nconst HomePage = React.lazy(() => import(\"../home/home\"));\r\nconst AboutPage = React.lazy(() => import(\"../about\"))\r\nconst ProjectRouter = React.lazy(() => import(\"../../projects/router\"));\r\n\r\nconst routes = [\r\n    { path: \"/home\", name: \"test\", component: HomePage, exact: true},\r\n    { path: \"/about\", name: \"about\", component: AboutPage, exact: true},\r\n    { path: \"/projects/*\", name: \"projects\", component: ProjectRouter, exact: false}\r\n\r\n];\r\n\r\nconst Main = props => {\r\n\r\n    return (\r\n        <Layout className=\"main\">\r\n            <Navbar />\r\n            <Content className=\"main-content\">\r\n                <Suspense fallback={load()}>\r\n                    <Routes>\r\n                        {/* <Route index ></Route> */}\r\n                        {/* <Route exact path=\"/home\" name=\"home\" element={<HomePage/>}/>\r\n                        <Route exact path=\"/about\" name=\"about\" element={<AboutPage/>}/>\r\n                        <Route exact path=\"/projects\" name=\"projects\" element={<ProjectPage/>}>\r\n                            <Route path=\"Shimenawa\" name=\"shimenawa\" element={<Proj_Shimenawa/>}/>\r\n                        </Route> */}\r\n                        {routes.map(route => {\r\n                            return route.component ? (\r\n                                <Route \r\n                                    path={route.path}\r\n                                    exact={route.exact}\r\n                                    name={route.name}\r\n                                    element={<route.component routerDepth={1}/>}\r\n                                />\r\n                            ) : null;\r\n                        })}\r\n                        <Route exact path=\"/\" element={<Navigate to=\"home\"/>}/> \r\n                    </Routes>\r\n                </Suspense>\r\n            </Content>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Main;"],"names":["Header","Layout","Navbar","getMenuKeyFromPath","pth","pathname","subrouteIndex","indexOf","length","substring","menuKey","setMenuKey","useState","useLocation","callback","location","useEffect","useLocationEffect","loc","screenSize","setScreenSize","getCurrentDimension","width","window","innerWidth","height","innerHeight","updateDimension","addEventListener","removeEventListener","hidden","setHidden","previousScrollPosition","currentScrollPosition","e","pageYOffset","_jsx","id","className","concat","style","zIndex","paddingLeft","paddingRight","children","_jsxs","Menu","theme","mode","defaultSelectedKeys","selectedKeys","onClick","_ref","key","Item","opacity","visibility","transition","Link","to","marginLeft","href","GithubOutlined","marginRight","fontSize","Content","routes","path","name","component","React","exact","props","Suspense","fallback","load","Routes","map","route","Route","element","routerDepth","Navigate"],"sourceRoot":""}