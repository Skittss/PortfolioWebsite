{"version":3,"sources":["projects/Website/index.jsx","content/projects/FourierSketcher/img/mononoke.jpg","projects/index.jsx","projects/Webgl-Canny/index.jsx","content/projects/Webgl-Canny/Canny-thumbnail.png","web/projects.jsx"],"names":["Meta","title","thumb","tags","route","ProjectMetas","Website","Card","CoverImage","props","className","preview","alt","src","_langTagColours","LangTags","map","tag","text","LangTag","s","brdr","txt","op","RegExp","test","slice","color","undefined","border","opacity","_getLangTagStyle","class","style","borderColor","borderStyle","_getProjectCard","pMeta","hoverable","width","cover","description","projects","gutter","justify","align","placement","to","useLocation","pathname"],"mappings":"2LASeA,EAPF,CACTC,MAAO,gBACPC,MCJW,IAA0B,qCDKrCC,KAAM,CAAC,UAAW,YAClBC,MAAO,MEGIC,EALM,CCFR,CACTJ,MAAO,6BACPC,MCJW,IAA0B,4CDKrCC,KAAM,CAAC,OAAQ,UAAW,UAAW,YACrCC,MAAO,gBDAPE,G,OGEIN,EAASO,IAATP,KAEFQ,EAAa,SAAAC,GACf,OACI,sBAAKC,UAAU,wBAAf,UACI,cAAC,IAAD,CAAOC,SAAS,EAAOD,UAAU,cAAcE,IAAKH,EAAMG,IAAKC,IAAKJ,EAAMI,MAC1E,qBAAKH,UAAU,iBAKrBI,EAAkB,CACpB,GAAM,UACN,QAAW,UACX,MAAO,UACP,KAAQ,UACR,QAAW,WA0BTC,EAAW,SAAAN,GACb,OACIA,EAAMN,KAAKa,KAAI,SAAAC,GAAG,OAAI,iCAAM,cAAC,EAAD,CAASC,KAAMD,IAArB,cAIxBE,EAAU,SAAAV,GACZ,IAAIW,EA9BiB,SAAAX,GACrB,IACIY,EACAC,EACAC,EAWJ,OAdY,IAAIC,OAAO,cAIbC,KAAKhB,EAAMS,OACjBG,EAAO,SACPC,EAAMb,EAAMS,KAAKQ,MAAM,GAAI,GAC3BH,EAAK,KAELF,EAAO,QACPC,EAAMb,EAAMS,KACZK,EAAK,GAGF,CACHI,WAAgCC,IAAzBd,EAAgBQ,GAAqB,UAAYR,EAAgBQ,GACxEO,OAAQR,EACRH,KAAMI,EACNQ,QAASP,GAWLQ,CAAiBtB,GAEzB,OACI,sBAAMuB,MAAM,UAAUC,MAAO,CAACN,MAAOP,EAAEO,MAAOO,YAAad,EAAEO,MAAOQ,YAAaf,EAAES,OAAQC,QAASV,EAAEU,SAAtG,SAAiHV,EAAEF,QAIrHkB,EAAkB,SAACC,GACrB,OACI,cAAC,IAAD,CAAMC,WAAS,EAACL,MAAO,CAACM,MAAO,KAAMC,MAAO,cAAC,EAAD,CAAY5B,IAAKyB,EAAMpC,MAAOY,IAAKwB,EAAMnC,QAArF,SACI,cAAC,EAAD,CAAMD,MAAOoC,EAAMpC,MAAOwC,YAAa,cAAC,EAAD,CAAUtC,KAAMkC,EAAMlC,YAqC1DuC,UAhCE,WACb,OACI,qBAAKhC,UAAU,eAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKiC,OAAQ,CAAC,GAAG,IAAKC,QAAQ,SAASC,MAAM,SAA7C,SAEQxC,EAAaW,KAAI,SAAAqB,GACb,OAAoB,OAAhBA,EAAMjC,MAEF,cAAC,IAAD,UACI,cAAC,IAAD,CAASH,MAAM,gCAAgC6C,UAAU,SAAzD,SACKV,EAAgBC,OAMzB,cAAC,IAAD,UACI,cAAC,IAAD,CAAMU,GAAIC,cAAcC,SAAWZ,EAAMjC,MAAzC,SACKgC,EAAgBC","file":"static/js/14.4a43d17a.chunk.js","sourcesContent":["import img from \"../../content/projects/FourierSketcher/img/mononoke.jpg\"\r\n\r\nconst Meta = {\r\n    title: \"This Website!\",\r\n    thumb: img,\r\n    tags: [\"ReactJS\", \"~~antd~~\"],\r\n    route: null,\r\n}\r\n\r\nexport default Meta;","export default __webpack_public_path__ + \"static/media/mononoke.53d140e8.jpg\";","import Website from \"./Website\";\r\nimport WebglCanny from \"./Webgl-Canny\";\r\n\r\n// Newest at the front for now\r\nconst ProjectMetas = [\r\n    WebglCanny,\r\n    Website\r\n];\r\n\r\nexport default ProjectMetas;","import img from \"../../content/projects/Webgl-Canny/Canny-thumbnail.png\";\r\n\r\nconst Meta = {\r\n    title: \"WebGL Canny Edge Detection\",\r\n    thumb: img,\r\n    tags: [\"GLSL\", \"ThreeJS\", \"ReactJS\", \"~~antd~~\"],\r\n    route: \"/Webgl-Canny\",\r\n}\r\n\r\nexport default Meta;","export default __webpack_public_path__ + \"static/media/Canny-thumbnail.269be206.png\";","import React from 'react';\r\nimport FadeIn from 'react-fade-in';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Card, Tooltip, Grid, Row, Col, Image } from 'antd';\r\nimport ProjectMetas from \"../projects\";\r\n\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst CoverImage = props => {\r\n    return (\r\n        <div className=\"cover-image-container\">\r\n            <Image preview={false} className=\"cover-image\" alt={props.alt} src={props.src}/>\r\n            <div className=\"fade-out\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst _langTagColours = {\r\n    \"JS\": \"#43FF97\",\r\n    \"ReactJS\": \"#EE177C\",\r\n    \"C++\": \"#F6B62C\",\r\n    \"GLSL\": \"#00CECB\",\r\n    \"ThreeJS\": \"#AEF78E\"\r\n}\r\n\r\nconst _getLangTagStyle = props => {\r\n    var regex = new RegExp(\"^~~(.*)~~$\");\r\n    var brdr;\r\n    var txt;\r\n    var op;\r\n    if (regex.test(props.text)) {\r\n        brdr = \"dashed\";\r\n        txt = props.text.slice(2, -2);\r\n        op = 0.5;\r\n    } else {\r\n        brdr = \"solid\";\r\n        txt = props.text;\r\n        op = 1;\r\n    }\r\n\r\n    return {\r\n        color: _langTagColours[txt] === undefined ? \"#000000\" : _langTagColours[txt],\r\n        border: brdr,\r\n        text: txt,\r\n        opacity: op\r\n    }\r\n}\r\n\r\nconst LangTags = props => {\r\n    return (\r\n        props.tags.map(tag => <span><LangTag text={tag}/>&nbsp;</span>)\r\n    );\r\n}\r\n\r\nconst LangTag = props => {   \r\n    let s = _getLangTagStyle(props);\r\n    \r\n    return (\r\n        <span class=\"LangTag\" style={{color: s.color, borderColor: s.color, borderStyle: s.border, opacity: s.opacity}}>{s.text}</span>\r\n    );\r\n}\r\n\r\nconst _getProjectCard = (pMeta) => {\r\n    return (\r\n        <Card hoverable style={{width: 300}} cover={<CoverImage alt={pMeta.title} src={pMeta.thumb}/>}>\r\n            <Meta title={pMeta.title} description={<LangTags tags={pMeta.tags}/>} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst projects = () => {\r\n    return (\r\n        <div className=\"project-view\">\r\n            <FadeIn>\r\n                <Row gutter={[16,16]} justify=\"center\" align=\"middle\">\r\n                    {\r\n                        ProjectMetas.map(pMeta => {\r\n                            if (pMeta.route === null) {\r\n                                return (\r\n                                    <Col>\r\n                                        <Tooltip title=\"This project has no page yet.\" placement=\"bottom\">\r\n                                            {_getProjectCard(pMeta)}\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                    <Col>   \r\n                                        <Link to={useLocation().pathname + pMeta.route}>\r\n                                            {_getProjectCard(pMeta)}                                \r\n                                        </Link>\r\n                                    </Col>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </Row>\r\n            </FadeIn>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default projects;"],"sourceRoot":""}